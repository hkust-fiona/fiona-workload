#include "fiona.h"
#include "utils/pprint.h"

// use: test/Testcase-Codgen.ipynb to generate
static const elem_t convnet_kernel_weight[2][3][4][4] = {{{{-3, 10, 6, -10}, {11, 6, 9, 3}, {-12, -11, -1, -11}, {-2, 10, 10, 8}}, {{-12, -3, 0, -2}, {8, -14, 13, 3}, {-10, 3, 10, 0}, {-1, -1, -12, -3}}, {{4, -2, -1, 10}, {10, 14, -6, 0}, {-11, -3, -9, -7}, {-2, -1, -3, -2}}}, {{{0, -10, 0, 0}, {4, 11, -8, 9}, {-1, 9, 5, -11}, {-12, -13, -5, -9}}, {{-11, 4, -8, -8}, {9, -12, -5, 1}, {-8, -2, 11, -11}, {3, -10, -13, 1}}, {{-3, 5, -5, -3}, {3, 14, 6, 8}, {2, 8, 5, -6}, {-2, 3, 3, 0}}}};
static const elem_t convnet_x[1][3][7][7] = {{{{-2, -13, 4, 0, -25, 4, 5}, {18, 7, -23, 7, 13, -6, 1}, {10, -10, -4, 7, -14, 4, 0}, {24, -19, 5, 8, -12, -11, -3}, {10, -5, -12, -6, -14, -13, 2}, {8, -4, 9, -5, -16, 15, -2}, {-10, -5, -13, -7, -4, -15, 17}}, {{-4, -9, -3, -5, -11, -1, 17}, {0, -1, -10, -4, -9, 16, 5}, {16, -3, 1, 12, 1, 3, 1}, {-4, -8, 0, 14, 19, -17, -3}, {-3, -1, -4, 20, -23, -22, -2}, {-12, -3, -23, -1, -4, 13, 6}, {17, 10, -10, -9, -12, 1, 13}}, {{15, 13, -38, -9, -9, -1, -10}, {-2, 15, 17, 0, 7, 17, 0}, {-7, -16, 4, -12, -3, 7, 5}, {17, -2, -6, 6, -1, -13, 9}, {8, 24, -4, 7, 11, -7, 8}, {2, 3, -10, 10, 1, 1, -18}, {-8, -10, 3, 9, 14, 8, 13}}}};

const size_t in_channels = 3, out_channels = 2, kernel_size = 4, stride = 3, padding = 0, batch_size = 1, x_rows = 7, x_cols = 7;

int main() {
    // display for testbench info
    printf("------------- FIONA NN Test -------------\n");
    printf("  *type: Conv2d Module\n");
    printf("  *dataset: generated by test/Testcase-Codegen.ipynb\n");

    size_t y_size, y_rows, y_cols;
    conv2d_shape(&y_size, &y_rows, &y_cols, batch_size, x_rows, x_cols, in_channels, out_channels, kernel_size, stride, padding);
    elem_t y[batch_size][out_channels][y_rows][y_cols];
    array_init(&y[0][0][0][0], y_size, 0);

    nn_conv2d(&y[0][0][0][0], &convnet_kernel_weight[0][0][0][0], &convnet_x[0][0][0][0], batch_size, x_rows, x_cols,
    in_channels, out_channels, kernel_size, stride, padding);

    printf("kernel_matrix (%d, %d, %d, %d) = ", out_channels, in_channels, kernel_size, kernel_size);
    print_mat(&convnet_kernel_weight[0][0][0][0], kernel_size, kernel_size, in_channels, out_channels);
    
    printf("x_matrix (%d, %d, %d, %d) = ", batch_size, in_channels, x_rows, x_cols);
    print_mat(&convnet_x[0][0][0][0], x_rows, x_cols, in_channels, batch_size);

    printf("y_matrix (%d, %d, %d, %d) = ", batch_size, out_channels, y_rows, y_cols);
    print_mat(&y[0][0][0][0], y_rows, y_cols, out_channels, batch_size);

    DUMP_STAT;

    return 0;
}

